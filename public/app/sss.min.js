!function(){"use strict";function StateProvider($stateProvider){$stateProvider.state("search.create",{url:"/create",data:{displayName:"Create"},views:{"@":{templateUrl:"/app/views/create.html",controller:"CreateController"}}})}function CreateController($scope,$rootScope,$state,$nodeServices,growl){$scope.formData={},$scope.rawView=!0;$nodeServices.getCurrentUser().then(function(user){user||$state.go("login")}),$scope.createSnippet=function(){var uuid=generateUUID(),snippet={_id:uuid,displayName:$scope.formData.displayName,description:$scope.formData.description,owner:$rootScope.currentUser.username,readme:$scope.formData.readme};$nodeServices.addSnippet(snippet).then(function(){$nodeServices.runDBIndexer(),growl.info("It may take up to 5 minutes for your new snippet to be searchable.",{ttl:5e3,disableCountDown:!0}),$state.go("search.results.overview",{snippetId:uuid})})},$scope.cancelCreate=function(){$state.go("search",{})},$scope.aceLoaded=function(_editor){var _session=_editor.getSession();_editor.renderer;_session.setMode("ace/mode/markdown"),_session.setUndoManager(new ace.UndoManager),$(window).resize()},$scope.formatReadmeForPreview=function(){$scope.formData.formattedReadme=marked($scope.formData.readme||"")}}angular.module("app.create",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap","app.$nodeServices","ui.ace"]).config(["$stateProvider",StateProvider]).controller("CreateController",CreateController),StateProvider.$inject=["$stateProvider"],CreateController.$inject=["$scope","$rootScope","$state","$nodeServices","growl"]}(),function(){"use strict";function StateProvider($stateProvider){$stateProvider.state("search.results.overview.details",{url:"/snippet-detail/:snippetId/:fileName",data:{displayName:"{{$stateParams.fileName}}"},views:{"@":{templateUrl:"/app/views/details.html",controller:"DetailsController"}},params:{isOwner:null}})}function DetailsController($scope,$nodeServices,$stateParams,$state,growl){$scope.snippetId=$stateParams.snippetId,$scope.fileName=$stateParams.fileName,$scope.isOwner=$stateParams.isOwner,$scope.showEditor=!1,$scope.confirmCancel=!1,$scope.content="",$scope.origContent="";var overviewPage="search.results.overview";$nodeServices.getFile($scope.snippetId,$scope.fileName).then(function(data){data.toLowerCase().startsWith("http")?$scope.contentUrl=data:($scope.content=data,$scope.origContent=data,$scope.showEditor=!0)}),$scope.aceLoaded=function(_editor){var _session=_editor.getSession(),fileComps=(_editor.renderer,$scope.fileName?$scope.fileName.toLowerCase().split("."):["text"]),mode=fileComps[fileComps.length-1];switch(1==fileComps.length&&(mode="text"),mode){case"xsl":mode="xml";break;case"js":mode="javascript"}_session.setMode("ace/mode/"+mode),_session.setUndoManager(new ace.UndoManager),_editor.setReadOnly(!$scope.isOwner),$(window).resize()},$scope.saveFile=function(){if($scope.content==$scope.origContent)return void $state.go(overviewPage,{});$nodeServices.updateFile($scope.snippetId,$scope.fileName,$scope.content).then(function(){$nodeServices.runFileIndexer(),growl.info("It may take up to 5 minutes for your changes to be searchable.",{ttl:5e3,disableCountDown:!0}),$state.go(overviewPage,{})})},$scope.cancelEdit=function(){$scope.content!=$scope.origContent?($scope.confirmCancel=!1,$("#cancelEditModal").modal(),$("#cancelEditModal").on("hidden.bs.modal",function(){if($scope.confirmCancel)return void $state.go(overviewPage,{})})):$state.go(overviewPage,{})}}angular.module("app.details",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap","app.$nodeServices","ui.ace"]).config(["$stateProvider",StateProvider]).controller("DetailsController",DetailsController),StateProvider.$inject=["$stateProvider"],DetailsController.$inject=["$scope","$nodeServices","$stateParams","$state","growl"]}(),function(){"use strict";function StateProvider(stateProvider){stateProvider.state("login",{url:"/login",data:{displayName:"Login"},views:{"@":{templateUrl:"/app/views/login.html",controller:"LoginController"}}})}function LoginController($scope,$rootScope,$state,$nodeServices){}angular.module("app.login",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap","ngSanitize","app.$nodeServices"]).config(["$stateProvider",StateProvider]).controller("LoginController",LoginController),StateProvider.$inject=["$stateProvider"],LoginController.$inject=["$scope","$rootScope","$state","$nodeServices"]}(),function(){"use strict";function StateProvider(stateProvider){stateProvider.state("search.mySnippets",{url:"/mySnippets",data:{displayName:"My Snippets"},views:{"@":{templateUrl:"/app/views/results.html",controller:"MySnippetsController"}}})}function MySnippetsController($scope,$rootScope,$state,$nodeServices,$searchService){$nodeServices.getCurrentUser().then(function(user){user||$state.go("login")}),$rootScope.$watch("currentUser",function(user){user&&$searchService.submitSearch($rootScope.currentUser.username)})}angular.module("app.mySnippets",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap","ngSanitize","app.$nodeServices","app.$searchService"]).config(["$stateProvider",StateProvider]).controller("MySnippetsController",MySnippetsController),StateProvider.$inject=["$stateProvider"],MySnippetsController.$inject=["$scope","$rootScope","$state","$nodeServices","$searchService"]}(),function(){"use strict";function StateProvider(stateProvider){stateProvider.state("search.results.overview",{url:"/snippet-overview/:snippetId",data:{displayName:"Overview"},views:{"@":{templateUrl:"/app/views/overview.html",controller:"OverviewController"}}})}function OverviewController($scope,$rootScope,$nodeServices,$stateParams,$state,$searchService,editableOptions,FileUploader,growl){$scope.snippetId=$stateParams.snippetId,$scope.snippetOverview={},$scope.snippetOverview.isOwner=!1,$scope.fileContent="",$scope.readme="",$scope.origReadme="",$scope.confirmDelete=!1,$scope.editReadme=!1;var indexMessage="It may take up to 5 minutes for your changes to be searchable.";$scope.avgRatingOptions={ratedFill:"#337ab7",readOnly:!0,halfStar:!0,starWidth:"20px"},$scope.ratingOptions={readOnly:!1,halfStar:!0,starWidth:"20px"};var disqusUrl="http://www.softwaresnippetsearch.com/#!/search/results/snippet-overview/"+$scope.snippetId;$scope.disqusConfig={disqus_shortname:"softwaresnippetsearch",disqus_identifier:$scope.snippetId,disqus_url:disqusUrl},$rootScope.$watch("currentUser",function(user){user&&$nodeServices.getSnippetRatingByUser({snippetId:$scope.snippetId,user:user.username}).then(function(userRating){userRating&&($scope.userRating=userRating.rating)})}),$nodeServices.getSnippetRating($scope.snippetId).then(function(result){result&&($scope.avgRating=result)}),$scope.setRating=function(event,data){if(data.rating&&$scope.userRating!=data.rating){$scope.userRating=data.rating;var snippetRating={snippetId:$scope.snippetId,rater:$rootScope.currentUser.username,rating:data.rating};$nodeServices.addUpdateSnippetRating(snippetRating)}},$scope.aceLoaded=function(_editor){var _session=_editor.getSession();_editor.renderer;_session.setMode("ace/mode/markdown"),_session.setUndoManager(new ace.UndoManager),$(window).resize(),$scope.redrawAce=function(){_editor.resize(),_editor.renderer.updateFull()}},editableOptions.theme="bs3";!function(snippetId){$nodeServices.getCurrentUser().then(function(result){$scope.isLoggedIn=!!result}),$nodeServices.getSnippetOverview(snippetId).then(function(overview){overview?($scope.snippetOverview=overview,$scope.readme=overview.readme,$scope.origReadme=overview.readme,overview.readme&&($scope.formattedReadme=formatReadme(overview.readme))):(console.log("Error getting snippet."),$scope.snippetOverview.description="Snippet is in index but is not in database",$scope.snippetOverview.displayName="Snippet Not Found")})}($scope.snippetId),$scope.deleteSnippet=function(){$nodeServices.markSnippet($scope.snippetId,$scope.snippetOverview.files).then(function(){$nodeServices.runDBIndexer(),$nodeServices.runFileIndexer(),growl.info(indexMessage,{ttl:5e3,disableCountDown:!0}),$state.go("search",{})})},$scope.updateSnippet=function(){$scope.snippetOverview.owner=$rootScope.currentUser.username,$nodeServices.updateSnippet($scope.snippetOverview).then(function(){$nodeServices.runDBIndexer(),growl.info(indexMessage,{ttl:5e3,disableCountDown:!0})})},$scope.addFile=function(fileName){$nodeServices.addFile($scope.snippetId,fileName,"").then(function(){$state.reload()})},$scope.deleteFile=function(fileName){$scope.confirmDelete=!1,$("#fileDeleteModal").modal(),$("#fileDeleteModal").on("hidden.bs.modal",function(){$scope.confirmDelete&&($nodeServices.markFile($scope.snippetId,fileName).then(function(){$nodeServices.runFileIndexer(),growl.info(indexMessage,{ttl:5e3,disableCountDown:!0}),$state.reload()}),$scope.confirmDelete=!1)})},$scope.formatReadmeForPreview=function(){$scope.formattedReadme=formatReadme($scope.readme)},$scope.saveReadme=function(){$scope.readme==$scope.origReadme?$scope.editReadme=!1:($scope.origReadme=$scope.readme,$scope.snippetOverview.readme=$scope.readme,$scope.updateSnippet(),$scope.formattedReadme=formatReadme($scope.readme),$scope.editReadme=!1)},$scope.cancelEdit=function(){$scope.readme!=$scope.origReadme?($scope.confirmCancel=!1,$("#cancelEditModal").modal(),$("#cancelEditModal").on("hidden.bs.modal",function(){$scope.confirmCancel&&($scope.editReadme=!1,$scope.formattedReadme=formatReadme($scope.origReadme),$scope.readme=$scope.origReadme,$scope.$apply())})):$scope.editReadme=!1},$("#fileNameModal").on("shown.bs.modal",function(){$("#newFileName").focus()});var uploader=$scope.uploader=new FileUploader({url:"/api/snippet-detail/"+$scope.snippetId});uploader.onAfterAddingFile=function(item){item.file.size>1e7&&(growl.info("An uploaded file must not exceed 10M in size.",{ttl:5e3,disableCountDown:!0}),uploader.removeFromQueue(item))},$scope.uploadComplete=function(){$nodeServices.runFileIndexer(),growl.info(indexMessage,{ttl:5e3,disableCountDown:!0}),$state.reload()};var formatReadme=function(content){content||(content="");var imgUrl=$scope.snippetOverview.imageUrlPrefix+"/"+$scope.snippetId+"/";content=content.replace(/src=\"/g,'src="'+imgUrl);for(var startIdx=0;;){var idx=content.indexOf("<img",startIdx);if(idx==-1)break;var endIdx=content.indexOf(">",idx),endIdx2=content.indexOf("/>",idx);if(endIdx==-1)break;endIdx2>-1&&endIdx2<endIdx&&(endIdx=endIdx2);var imgElement=content.substring(idx,endIdx);imgElement.includes("width")||(imgElement+=" width='100%' ",content=content.substring(0,idx-1)+imgElement+content.substring(endIdx)),startIdx=endIdx}return marked(content||"")}}angular.module("app.overview",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap","app.$nodeServices","app.$searchService","xeditable","angularFileUpload","ui.ace"]).config(["$stateProvider",StateProvider]).controller("OverviewController",OverviewController),StateProvider.$inject=["$stateProvider"],OverviewController.$inject=["$scope","$rootScope","$nodeServices","$stateParams","$state","$searchService","editableOptions","FileUploader","growl"]}(),function(){"use strict";function StateProvider(stateProvider){stateProvider.state("search.results",{url:"/results",data:{displayName:"Results"},views:{"@":{templateUrl:"/app/views/results.html",controller:"ResultsController"}}})}function SearchBarFilteringController($scope){$scope.results_filter={templateUrl:"results_filter.html",categories:[{displayValue:"Active Directory",active:!0,count:1},{displayValue:"IDM",active:!0,count:4},{displayValue:"Policy",active:!0,count:2}],tags:[{displayValue:"Javascript",active:!0,count:1},{displayValue:"Formula",active:!0,count:4}],ratings:[{displayValue:"* * * * *",active:!0,count:4},{displayValue:"* * * *",active:!0,count:2},{displayValue:"* * *",active:!0,count:0},{displayValue:"* *",active:!0,count:0},{displayValue:"*",active:!0,count:0}]}}function ResultsController($scope){$scope.avgRatingOptions={ratedFill:"#337ab7",readOnly:!0,halfStar:!0,starWidth:"20px"}}function SearchCriteriaController($scope){$scope.search_criteria=[{displayValue:"javascript",active:!0,count:0},{displayValue:"idm",active:!0,count:35},{displayValue:"searchterm3",active:!0,count:7}]}function showMoreDirective(){return function(){$(".show-more").showMore({adjustHeight:40,moreText:"+ More",lessText:"- Less"})}}angular.module("app.results",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap","ngSanitize"]).config(["$stateProvider",StateProvider]).controller("SearchBarFilteringController",SearchBarFilteringController).controller("ResultsController",ResultsController).controller("SearchCriteriaController",SearchCriteriaController).directive("showMoreDirective",showMoreDirective),StateProvider.$inject=["$stateProvider"],SearchBarFilteringController.$inject=["$scope"],ResultsController.$inject=["$scope"],SearchCriteriaController.$inject=["$scope"]}(),function(){"use strict";function StateProvider(stateProvider){stateProvider.state("search",{url:"/search",data:{displayName:"Search"},views:{"":{templateUrl:"/app/views/search.html",controller:"SearchController"}}})}function SearchController($scope,$rootScope,$nodeServices){$nodeServices.getUserRankings().then(function(result){result&&($scope.userRankings=result.data)}),$nodeServices.getSnippetRankings().then(function(result){result&&($scope.snippetRankings=result.data)}),$nodeServices.getSnippetsByLatest().then(function(result){result&&($scope.latestSnippets=result)})}angular.module("app.search",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap"]).config(["$stateProvider",StateProvider]).controller("SearchController",SearchController),StateProvider.$inject=["$stateProvider"],SearchController.$inject=["$scope","$rootScope","$nodeServices"]}(),function(){"use strict";function StateProvider(stateProvider){stateProvider.state("asdasd",{url:"/sss",abstract:!0,template:"/app/views/sss.html"}).state("search",{url:"",data:{displayName:"Search"},templateUrl:"/app/views/search.html"})}angular.module("app.sss",["ui.router","ui.router.breadcrumbs","ngAnimate","ui.bootstrap"]).config(["$stateProvider",StateProvider]),StateProvider.$inject=["$stateProvider"]}(),function(){"use strict";function apiFactory($http,$log){function getCurrentUser(){return $http.get("/api/authenticated-user").then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getUserRankings(){return $http.get("/api/users/rating-rank").then(function(response){return response},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippetRankings(){return $http.get("/api/snippets/rating-rank").then(function(response){return response},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippets(){return $http.get("/api/snippets").then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippetsByLatest(){return $http.get("/api/snippets/latest").then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function addSnippet(snippet){return $http.post("/api/snippet",snippet).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function updateSnippet(snippet){return $http.put("/api/snippet/"+snippet._id,snippet).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function markSnippet(snippetId,files){return _.each(files,function(file){markFile(snippetId,file.name)}),$http.put("/api/snippet/"+snippetId,{_id:snippetId,deleted:"true"}).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function deleteSnippet(snippetId){return $http.delete("/api/snippet/"+snippetId).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippetOverview(snippetId){return $http.get("/api/snippet-overview/"+snippetId).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getFile(snippetId,fileName){return $http.get("/api/snippet-detail/"+snippetId+"/"+fileName).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function addFile(snippetId,fileName,content){var data={};return data.content=content,$http.post("/api/snippet-detail/"+snippetId+"/"+fileName,data).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function updateFile(snippetId,fileName,content){var data={};return data.content=content,$http.put("/api/snippet-detail/"+snippetId+"/"+fileName,data).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function markFile(snippetId,fileName){var data={};return data.content="deleted=true",$http.put("/api/snippet-detail/"+snippetId+"/"+fileName,data).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function deleteFile(snippetId,fileName){return $http.delete("/api/snippet-detail/"+snippetId+"/"+fileName).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function searchCode(searchTerms){return $http.get("/api/snippet-search?q="+encodeURIComponent(searchTerms)).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getCommits(repoOwner,repoName){return $http.get("/api/snippet-search/"+repoOwner+"/"+repoName).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippetRating(snippetId){return $http.get("/api/rating/"+snippetId).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippetsRatingsByArray(snippets){return $http.get("/api/ratings/"+snippets).then(function(responses){return responses},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function getSnippetRatingByUser(userRating){return $http.get("/api/rating/"+userRating.snippetId+"/"+userRating.user).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function addUpdateSnippetRating(rating){return $http.post("/api/rating/"+rating.snippetId,rating).then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function runDBIndexer(){return $http.get("/api/indexer/db").then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}function runFileIndexer(){return $http.get("/api/indexer/file").then(function(response){return response.data},function(reason){$log.debug(JSON.stringify(reason))}).catch(function(err){$log.debug(JSON.stringify(err))})}return{getCurrentUser:getCurrentUser,getUserRankings:getUserRankings,getSnippetRankings:getSnippetRankings,getSnippets:getSnippets,getSnippetsByLatest:getSnippetsByLatest,getSnippetOverview:getSnippetOverview,getSnippetRating:getSnippetRating,getSnippetsRatingsByArray:getSnippetsRatingsByArray,getSnippetRatingByUser:getSnippetRatingByUser,searchCode:searchCode,getCommits:getCommits,addSnippet:addSnippet,addUpdateSnippetRating:addUpdateSnippetRating,updateSnippet:updateSnippet,markSnippet:markSnippet,deleteSnippet:deleteSnippet,getFile:getFile,addFile:addFile,updateFile:updateFile,markFile:markFile,deleteFile:deleteFile,runDBIndexer:runDBIndexer,runFileIndexer:runFileIndexer}}angular.module("app.$nodeServices",[]).factory("$nodeServices",apiFactory),apiFactory.$inject=["$http","$log"]}(),function(){"use strict";function SearchService($nodeServices,$sce,$log){function updateMetaData(snippets){updateRating(snippets)}function updateRating(snippets){var ids=_.pluck(snippets,"snippetId");$nodeServices.getSnippetsRatingsByArray(ids).then(function(result){result&&(mergeByProperty(snippets,result.data,"snippetId"),vm.searchResults.items=snippets)})}var vm=this;return vm.searchTerms="",vm.searchResults={},vm.searchResults.total_count=0,vm.searchResults.inProgress=!1,vm.userSearched=!1,vm.typeOfSearch="web",vm.switchSearchType=function(searchType){vm.typeOfSearch=searchType,""!==vm.searchTerms&&($log.debug("rerunning search!"),vm.searchResults=[],vm.submitSearch(vm.searchTerms))},vm.clearSearch=function(){vm.searchTerms="",vm.searchResults={},vm.searchResults.total_count=0,vm.searchResults.inProgress=!1,vm.userSearched=!1},vm.submitSearch=function(searchTerms){vm.searchResults={},vm.searchResults.total_count=0,vm.searchResults.inProgress=!0,searchTerms&&""!==searchTerms&&(vm.searchTerms=searchTerms,$nodeServices.searchCode(searchTerms).then(function(response){if(!response)return vm.searchResults.inProgress=!1,void(vm.pagination.totalItems=0);response.items||(response.items=[]),_.each(response.items,function(r){var newArray=[];_.each(r["@search.highlights"],function(item,k){if(!k.includes("data.type")&&"displayName"!=k){var obj={};_.each(item,function(s,k){s=encodeHtml(s),s=s.replace(/&lt;em&gt;/g,"<mark>"),s=s.replace(/&lt;\/em&gt;/g,"</mark>"),s=s.replace(/&lt;img/g,"<noimg"),item[k]=s}),obj[k]=item,newArray.push(obj)}}),r["@search.highlights"]=newArray}),vm.userSearched=!0,vm.searchResults.items=response.items,vm.searchResults.total_count=response.items.length,vm.searchResults.inProgress=!1,vm.pagination.totalItems=vm.searchResults.total_count,updateMetaData(vm.searchResults.items)}))},vm.trustHtmlSnippet=function(html){return $sce.trustAsHtml(html)},vm.pagination=[],vm.pagination.viewby=vm.pagination.viewby?vm.pagination.viewby:"10",vm.pagination.totalItems=0,vm.pagination.currentPage=1,vm.pagination.itemsPerPage=vm.pagination.viewby,vm.pagination.maxSize=5,vm.pagination.setPage=function(pageNo){vm.pagination.currentPage=pageNo},vm.pagination.setItemsPerPage=function(num){vm.pagination.itemsPerPage=num,vm.pagination.currentPage=1},vm}angular.module("app.$searchService",["app.$nodeServices"]).factory("$searchService",SearchService),SearchService.$inject=["$nodeServices","$sce","$log"]}(),function(){"use strict";function URLRouteProvider(urlRouterProvider){urlRouterProvider.otherwise("/search")}function ngEnter(){return function(scope,element,attrs){element.bind("keydown keypress",function(event){13===event.which&&(scope.$apply(function(){scope.$eval(attrs.ngEnter,{event:event})}),event.preventDefault())})}}function main($rootScope,$searchService,$state,$stateParams,$log,$nodeServices){$rootScope.title="Software Snippet Search",$rootScope.$log=$log,$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.$searchService=$searchService,$nodeServices.getCurrentUser().then(function(result){$rootScope.currentUser=result})}angular.module("app",["ui.router","ui.router.breadcrumbs","rateYo","app.$nodeServices","app.$searchService","app.search","app.results","app.overview","app.details","app.create","app.mySnippets","app.login","angularUtils.directives.dirDisqus","angular-growl","anguFixedHeaderTable"]).config(["$urlRouterProvider",URLRouteProvider]).directive("ngEnter",ngEnter).run(main).config(function($locationProvider){$locationProvider.hashPrefix("!")}),URLRouteProvider.$inject=["$urlRouterProvider"],main.$inject=["$rootScope","$searchService","$state","$stateParams","$log","$nodeServices"]}();